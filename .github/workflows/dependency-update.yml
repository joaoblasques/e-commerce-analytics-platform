name: Dependency Updates

on:
  schedule:
    # Run every Monday at 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: '1.4.2'
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Update dependencies
      run: |
        poetry update
        poetry show --outdated
        
    - name: Run tests after update
      run: |
        poetry install --no-interaction
        poetry run pytest tests/unit/ -x
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: weekly dependency updates'
        body: |
          This PR updates project dependencies to their latest versions.
          
          ## Changes
          - Updated Poetry dependencies
          - Verified all unit tests pass
          
          ## Testing
          - [x] Unit tests pass
          - [ ] Integration tests need manual verification
          
          ## Notes
          Please review changes carefully and run full test suite before merging.
          
          ðŸ¤– Generated automatically by GitHub Actions
        branch: chore/dependency-updates
        delete-branch: true
        
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: '1.4.2'
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install dependencies
      run: poetry install --no-interaction
      
    - name: Run security audit
      run: |
        poetry run safety check --json --output safety-report.json || true
        poetry run bandit -r src/ -f json -o bandit-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
          
    - name: Create security issue on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸ”’ Security vulnerabilities detected',
            body: 'Security scan found vulnerabilities. Please check the latest workflow run for details.\n\nWorkflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
            labels: ['security', 'priority:high']
          })