repos:
  # Pre-commit hooks for general file cleanup
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-case-conflict
        name: Check for case conflicts
      - id: check-executables-have-shebangs
        name: Check executables have shebangs
      - id: check-shebang-scripts-are-executable
        name: Check shebang scripts are executable
      - id: debug-statements
        name: Debug statements and imports (Python)
      - id: mixed-line-ending
        name: Mixed line ending
      - id: name-tests-test
        name: Tests should end in _test.py
        args: ['--pytest-test-first']

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        name: Format Python code with Black
        language_version: python3
        args: ['--line-length=88']

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: Sort Python imports with isort
        args: ['--profile=black', '--line-length=88']

  # Python linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        name: Lint Python code with flake8
        args: 
          - '--max-line-length=88'
          - '--extend-ignore=E203,E501,W503'
          - '--exclude=.git,__pycache__,.venv,build,dist,*.egg-info,.pytest_cache,.mypy_cache'
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Type checking with MyPy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        name: Type check Python code with MyPy
        args: ['--ignore-missing-imports', '--show-error-codes']
        additional_dependencies:
          - types-redis
          - types-requests
          - types-pyyaml
          - types-python-dateutil
          - types-pytz

  # Security linting with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Security lint Python code with bandit
        args: ['-r', 'src/', '-f', 'json']
        exclude: 'tests/'

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfiles with hadolint
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: ['-d', '{extends: default, rules: {line-length: {max: 120}, comments: {min-spaces-from-content: 1}}}']

  # Poetry check
  - repo: https://github.com/python-poetry/poetry
    rev: 1.4.2
    hooks:
      - id: poetry-check
        name: Check Poetry configuration
      - id: poetry-lock
        name: Check Poetry lock file
        args: ['--check']

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: pytest-check
        name: Run pytest
        entry: poetry run pytest
        language: system
        types: [python]
        pass_filenames: false
        stages: [push]
        
      - id: spark-job-validation
        name: Validate Spark jobs
        entry: python -m src.utils.spark_validator
        language: system
        files: 'src/.*\.py$'
        pass_filenames: false
        stages: [commit]

# Global configuration
default_language_version:
  python: python3.9
  
fail_fast: false
default_stages: [commit]

# Exclude patterns
exclude: |
  (?x)^(
    \.git/.*|
    \.venv/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    build/.*|
    dist/.*|
    .*\.egg-info/.*|
    docs/_build/.*|
    htmlcov/.*|
    \.coverage.*|
    data/.*|
    logs/.*|
    \.env.*
  )$